import Foundation

{% for class in types.classes where class|annotated:"build_environment" %}
// sourcery:inline:{{ class.name }}.Environment.Properties
    typealias EnvironmentProtocol = {{ class.name }}EnvironmentProtocol

    private let env: EnvironmentProtocol
{% for property in class.containedType.Environment.variables %}
    private let {{ property.name }}: {{ property.typeName }}
{% endfor %}
// sourcery:end

// sourcery:inline:{{ class.name }}.Environment.Init
        self.env = env
{% for property in class.containedType.Environment.variables %}
        self.{{ property.name }} = env.{{ property.name }}
{% endfor %}
// sourcery:end

// sourcery:inline:{{ class.name }}.Environment.Protocol
protocol {{ class.name }}EnvironmentProtocol {
{% for property in class.containedType.Environment.variables %}
    var {{ property.name }}: {{ property.typeName }} { get }
{% endfor %}
}
// sourcery:end
{% endfor %}
